# Generated by Django 4.2.7 on 2023-12-01 14:36

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    replaces = [
        ("resume", "0001_initial"),
        ("resume", "0002_alter_job_quit_date_alter_job_start_date"),
        ("resume", "0003_alter_resume_search_status"),
        ("resume", "0004_alter_resume_languages"),
        ("resume", "0005_job_employment_type_job_is_displayed_and_more"),
        ("resume", "0006_alter_job_employment_type"),
        ("resume", "0007_alter_resume_search_status"),
        ("resume", "0008_remove_resume_search_status"),
        ("resume", "0009_resume_search_status"),
        ("resume", "0010_resume_display_on_main"),
        ("resume", "0011_alter_job_unique_together"),
        ("resume", "0012_alter_job_unique_together"),
        ("resume", "0013_resume_person_name_en_resume_person_name_ru_and_more"),
        ("resume", "0014_job_company_en_job_company_ru_job_description_en_and_more"),
        ("resume", "0015_education_resume_educations"),
        ("resume", "0016_alter_education_options"),
        ("resume", "0017_alter_education_location"),
        ("resume", "0018_alter_education_location"),
        ("resume", "0019_remove_resume_education"),
        ("resume", "0020_job_website_job_workplace_resume_relevant_skills_and_more"),
        ("resume", "0021_alter_resume_hobby_alter_resume_hobby_en_and_more"),
        ("resume", "0022_education_activities_en_education_activities_ru_and_more"),
        ("resume", "0023_resume_skills_summary_resume_skills_summary_en_and_more"),
        ("resume", "0024_certificate_remove_resume_certifications_and_more"),
        ("resume", "0025_alter_job_website_alter_resume_photo_and_more"),
        ("resume", "0026_resume_file_pdf_resume_file_pdf_en_and_more"),
        ("resume", "0027_alter_job_resume"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Education",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                ("degree", models.CharField(max_length=200, verbose_name="Degree")),
                (
                    "study_field",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Field of Study"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Start Date"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="End Date"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "grade",
                    models.CharField(blank=True, max_length=200, verbose_name="GPA"),
                ),
                (
                    "activities",
                    models.TextField(
                        blank=True, verbose_name="Activities and Societies"
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Location"
                    ),
                ),
                (
                    "activities_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="Activities and Societies"
                    ),
                ),
                (
                    "activities_ru",
                    models.TextField(
                        blank=True, null=True, verbose_name="Activities and Societies"
                    ),
                ),
                (
                    "degree_en",
                    models.CharField(max_length=200, null=True, verbose_name="Degree"),
                ),
                (
                    "degree_ru",
                    models.CharField(max_length=200, null=True, verbose_name="Degree"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "location_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "location_ru",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "study_field_en",
                    models.CharField(
                        blank=True,
                        max_length=120,
                        null=True,
                        verbose_name="Field of Study",
                    ),
                ),
                (
                    "study_field_ru",
                    models.CharField(
                        blank=True,
                        max_length=120,
                        null=True,
                        verbose_name="Field of Study",
                    ),
                ),
                (
                    "title_en",
                    models.CharField(max_length=200, null=True, verbose_name="Title"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=200, null=True, verbose_name="Title"),
                ),
            ],
            options={
                "ordering": ["-start_date"],
            },
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                (
                    "title_en",
                    models.CharField(max_length=200, null=True, verbose_name="Title"),
                ),
                (
                    "title_ru",
                    models.CharField(max_length=200, null=True, verbose_name="Title"),
                ),
                (
                    "organization",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Issuing Organization"
                    ),
                ),
                (
                    "organization_en",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Issuing Organization",
                    ),
                ),
                (
                    "organization_ru",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Issuing Organization",
                    ),
                ),
                (
                    "is_expired",
                    models.BooleanField(default=False, verbose_name="Does it expire?"),
                ),
                (
                    "issue_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Issue Date"
                    ),
                ),
                (
                    "expiration_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Expiration Date"
                    ),
                ),
                (
                    "credential_id",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Credential ID"
                    ),
                ),
                (
                    "credential_url",
                    models.URLField(
                        blank=True, max_length=512, verbose_name="Credential URL"
                    ),
                ),
                (
                    "picture",
                    models.ImageField(blank=True, upload_to="resume/certificates/"),
                ),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=120, verbose_name="Location"
                    ),
                ),
                (
                    "location_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "location_ru",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "commentary",
                    models.CharField(
                        blank=True, max_length=512, verbose_name="Commentary"
                    ),
                ),
                (
                    "commentary_en",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="Commentary"
                    ),
                ),
                (
                    "commentary_ru",
                    models.CharField(
                        blank=True, max_length=512, null=True, verbose_name="Commentary"
                    ),
                ),
            ],
            options={
                "ordering": ["-issue_date"],
            },
        ),
        migrations.CreateModel(
            name="Resume",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=255, verbose_name="Role")),
                (
                    "slug",
                    models.SlugField(max_length=255, unique=True, verbose_name="URL"),
                ),
                (
                    "is_published",
                    models.BooleanField(default=False, verbose_name="Is Published?"),
                ),
                (
                    "person_name",
                    models.CharField(max_length=255, verbose_name="Full Name"),
                ),
                ("photo", models.ImageField(blank=True, upload_to="resume/profiles/")),
                (
                    "contact_info",
                    models.TextField(
                        blank=True,
                        help_text="One contact per line as Title||URL||fa_icon_class(es)",
                        verbose_name="Contact Information",
                    ),
                ),
                (
                    "social_links",
                    models.TextField(
                        blank=True,
                        help_text="One link per line as Title||URL||fa_icon_class(es)<br><br>Examples of CSS classes for icons:'fa-brands fa-linkedin-in', 'fa-brands fa-twitter', 'fa-solid fa-globe', 'fa-brands fa-facebook' and other Font Awesome icons <br>Examples of custom CSS classes for icons:'brand-habr-career'",
                        verbose_name="Links",
                    ),
                ),
                (
                    "personal_profile",
                    models.TextField(blank=True, verbose_name="Profile / About"),
                ),
                (
                    "skills",
                    models.TextField(
                        blank=True,
                        help_text="One skill per line as skill=89",
                        verbose_name="Skills",
                    ),
                ),
                ("writings", models.TextField(blank=True, verbose_name="Writings")),
                (
                    "contributions",
                    models.TextField(blank=True, verbose_name="Contributions"),
                ),
                (
                    "hobby",
                    models.TextField(
                        blank=True,
                        help_text="One activity per line.",
                        verbose_name="Interests & Hobbies",
                    ),
                ),
                (
                    "personal_projects",
                    models.TextField(
                        blank=True,
                        help_text="HTML tags are allowed here.",
                        verbose_name="Personal Projects",
                    ),
                ),
                (
                    "languages",
                    models.CharField(
                        blank=True,
                        default="English (B?); Russian (native)",
                        help_text="Semicolon separated list as English (B2); Russian (native)",
                        max_length=255,
                        verbose_name="Languages",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="Updated"
                    ),
                ),
                (
                    "search_status",
                    models.IntegerField(
                        choices=[
                            (0, "Open to work"),
                            (1, "Open to new opportunities"),
                            (2, "Not available to be hired"),
                            (3, "Work now, but ready to another part-time job"),
                            (4, "Unknown"),
                        ],
                        default=0,
                        verbose_name="Search status",
                    ),
                ),
                (
                    "display_on_main",
                    models.BooleanField(default=False, verbose_name="Display on Main?"),
                ),
                (
                    "person_name_en",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Full Name"
                    ),
                ),
                (
                    "person_name_ru",
                    models.CharField(
                        max_length=255, null=True, verbose_name="Full Name"
                    ),
                ),
                (
                    "role_en",
                    models.CharField(max_length=255, null=True, verbose_name="Role"),
                ),
                (
                    "role_ru",
                    models.CharField(max_length=255, null=True, verbose_name="Role"),
                ),
                (
                    "hobby_en",
                    models.TextField(
                        blank=True,
                        help_text="One activity per line.",
                        null=True,
                        verbose_name="Interests & Hobbies",
                    ),
                ),
                (
                    "hobby_ru",
                    models.TextField(
                        blank=True,
                        help_text="One activity per line.",
                        null=True,
                        verbose_name="Interests & Hobbies",
                    ),
                ),
                (
                    "languages_en",
                    models.CharField(
                        blank=True,
                        default="English (B?); Russian (native)",
                        help_text="Semicolon separated list as English (B2); Russian (native)",
                        max_length=255,
                        null=True,
                        verbose_name="Languages",
                    ),
                ),
                (
                    "languages_ru",
                    models.CharField(
                        blank=True,
                        default="English (B?); Russian (native)",
                        help_text="Semicolon separated list as English (B2); Russian (native)",
                        max_length=255,
                        null=True,
                        verbose_name="Languages",
                    ),
                ),
                (
                    "personal_profile_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="Profile / About"
                    ),
                ),
                (
                    "personal_profile_ru",
                    models.TextField(
                        blank=True, null=True, verbose_name="Profile / About"
                    ),
                ),
                (
                    "personal_projects_en",
                    models.TextField(
                        blank=True,
                        help_text="HTML tags are allowed here.",
                        null=True,
                        verbose_name="Personal Projects",
                    ),
                ),
                (
                    "personal_projects_ru",
                    models.TextField(
                        blank=True,
                        help_text="HTML tags are allowed here.",
                        null=True,
                        verbose_name="Personal Projects",
                    ),
                ),
                (
                    "educations",
                    models.ManyToManyField(
                        blank=True, related_name="resumes", to="resume.education"
                    ),
                ),
                (
                    "relevant_skills",
                    models.TextField(
                        blank=True,
                        help_text="One skill / instrument per line as Category: skill1, skill2, ...",
                        verbose_name="Relevant Skills (Instruments)",
                    ),
                ),
                (
                    "contact_info_en",
                    models.TextField(
                        blank=True,
                        help_text="One contact per line as Title||URL||fa_icon_class(es)",
                        null=True,
                        verbose_name="Contact Information",
                    ),
                ),
                (
                    "contact_info_ru",
                    models.TextField(
                        blank=True,
                        help_text="One contact per line as Title||URL||fa_icon_class(es)",
                        null=True,
                        verbose_name="Contact Information",
                    ),
                ),
                (
                    "contributions_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="Contributions"
                    ),
                ),
                (
                    "contributions_ru",
                    models.TextField(
                        blank=True, null=True, verbose_name="Contributions"
                    ),
                ),
                (
                    "relevant_skills_en",
                    models.TextField(
                        blank=True,
                        help_text="One skill / instrument per line as Category: skill1, skill2, ...",
                        null=True,
                        verbose_name="Relevant Skills (Instruments)",
                    ),
                ),
                (
                    "relevant_skills_ru",
                    models.TextField(
                        blank=True,
                        help_text="One skill / instrument per line as Category: skill1, skill2, ...",
                        null=True,
                        verbose_name="Relevant Skills (Instruments)",
                    ),
                ),
                (
                    "skills_en",
                    models.TextField(
                        blank=True,
                        help_text="One skill per line as skill=89",
                        null=True,
                        verbose_name="Skills",
                    ),
                ),
                (
                    "skills_ru",
                    models.TextField(
                        blank=True,
                        help_text="One skill per line as skill=89",
                        null=True,
                        verbose_name="Skills",
                    ),
                ),
                (
                    "social_links_en",
                    models.TextField(
                        blank=True,
                        help_text="One link per line as Title||URL||fa_icon_class(es)<br><br>Examples of CSS classes for icons:'fa-brands fa-linkedin-in', 'fa-brands fa-twitter', 'fa-solid fa-globe', 'fa-brands fa-facebook' and other Font Awesome icons <br>Examples of custom CSS classes for icons:'brand-habr-career'",
                        null=True,
                        verbose_name="Links",
                    ),
                ),
                (
                    "social_links_ru",
                    models.TextField(
                        blank=True,
                        help_text="One link per line as Title||URL||fa_icon_class(es)<br><br>Examples of CSS classes for icons:'fa-brands fa-linkedin-in', 'fa-brands fa-twitter', 'fa-solid fa-globe', 'fa-brands fa-facebook' and other Font Awesome icons <br>Examples of custom CSS classes for icons:'brand-habr-career'",
                        null=True,
                        verbose_name="Links",
                    ),
                ),
                (
                    "writings_en",
                    models.TextField(blank=True, null=True, verbose_name="Writings"),
                ),
                (
                    "writings_ru",
                    models.TextField(blank=True, null=True, verbose_name="Writings"),
                ),
                (
                    "skills_summary",
                    models.TextField(
                        blank=True,
                        help_text="HTML tags are allowed here.",
                        verbose_name="Skills Summary",
                    ),
                ),
                (
                    "skills_summary_en",
                    models.TextField(
                        blank=True,
                        help_text="HTML tags are allowed here.",
                        null=True,
                        verbose_name="Skills Summary",
                    ),
                ),
                (
                    "skills_summary_ru",
                    models.TextField(
                        blank=True,
                        help_text="HTML tags are allowed here.",
                        null=True,
                        verbose_name="Skills Summary",
                    ),
                ),
                (
                    "certifications",
                    models.ManyToManyField(
                        blank=True, related_name="resumes", to="resume.certificate"
                    ),
                ),
                (
                    "file_pdf",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        upload_to="resume/files/",
                        verbose_name="PDF File",
                    ),
                ),
                (
                    "file_pdf_en",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        null=True,
                        upload_to="resume/files/",
                        verbose_name="PDF File",
                    ),
                ),
                (
                    "file_pdf_ru",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        null=True,
                        upload_to="resume/files/",
                        verbose_name="PDF File",
                    ),
                ),
            ],
            options={
                "verbose_name": "Resume",
                "verbose_name_plural": "Resumes",
                "ordering": ["-created_at", "role"],
            },
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.CharField(max_length=200, verbose_name="Role")),
                (
                    "company",
                    models.CharField(max_length=200, verbose_name="Company Name"),
                ),
                (
                    "start_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Start Date"
                    ),
                ),
                (
                    "quit_date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Quit Date"
                    ),
                ),
                ("logo", models.ImageField(blank=True, upload_to="resume/jobs/")),
                (
                    "location",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="Location"
                    ),
                ),
                (
                    "is_current",
                    models.BooleanField(default=False, verbose_name="Working here now"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "resume",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to="resume.resume",
                        verbose_name="resume",
                    ),
                ),
                (
                    "employment_type",
                    models.IntegerField(
                        choices=[
                            (None, "(Unknown)"),
                            (0, "full-time"),
                            (1, "part-time"),
                            (2, "self-employed"),
                            (3, "freelance"),
                            (4, "contract"),
                            (5, "internship"),
                            (6, "apprenticeship"),
                            (7, "seasonal"),
                        ],
                        default=0,
                        verbose_name="Employment Type",
                    ),
                ),
                (
                    "is_displayed",
                    models.BooleanField(
                        default=True, verbose_name="Is Displayed on the web page?"
                    ),
                ),
                (
                    "is_registered",
                    models.BooleanField(
                        default=True, verbose_name="Is Registered work expirience?"
                    ),
                ),
                (
                    "company_en",
                    models.CharField(
                        max_length=200, null=True, verbose_name="Company Name"
                    ),
                ),
                (
                    "company_ru",
                    models.CharField(
                        max_length=200, null=True, verbose_name="Company Name"
                    ),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_ru",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "location_en",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "location_ru",
                    models.CharField(
                        blank=True, max_length=200, null=True, verbose_name="Location"
                    ),
                ),
                (
                    "role_en",
                    models.CharField(max_length=200, null=True, verbose_name="Role"),
                ),
                (
                    "role_ru",
                    models.CharField(max_length=200, null=True, verbose_name="Role"),
                ),
                (
                    "website",
                    models.URLField(blank=True, max_length=120, verbose_name="Website"),
                ),
                (
                    "workplace",
                    models.IntegerField(
                        choices=[
                            (None, "(Unknown)"),
                            (0, "remote"),
                            (1, "on-site"),
                            (2, "hybrid"),
                        ],
                        default=0,
                        verbose_name="Workplace",
                    ),
                ),
            ],
            options={
                "unique_together": {("resume", "company", "role", "start_date")},
            },
        ),
    ]
